# This is a basic workflow to help you get started with Actions

name: CI

concurrency: 
  group: mygroup
  cancel-in-progress: true

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  search-and-index:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      - name: install pypy
        id: setup-pypy
        uses: actions/setup-python@v2
        with:
          python-version: 'pypy-3.7'
    
      - name: install poetry
        uses: snok/install-poetry@v1

      - name: load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ steps.setup-pypy.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: install deps if cache miss
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: install b2
        run: pip3 install b2
        
      - name: configure b2
        run: b2 authorize-account $B2_KEY_ID $B2_APPLICATION_KEY
        env:
          B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
          B2_KEY_ID: ${{ secrets.B2_KEY_ID }}
 
      - name: print b2 account info
        run: b2 get-account-info
        
      - name: download current db if it exists...
        run: b2 download-file-by-name rdcodex orchard-${{ env.GITHUB_REF_SLUG }}.db orchard.db
        working-directory: ./orchard/scan
        continue-on-error: true
        
      - name: Print out the sha1sum of the current db
        run: sha1sum orchard.db
        working-directory: ./orchard/scan
        continue-on-error: true
        
      - name: scan
        run: timeout 45m poetry run python scan.py orchard.db
        working-directory: ./orchard/scan
        continue-on-error: true
        env:
          B2_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}
          KEY_ID: ${{ secrets.B2_KEY_ID }}

      - name: upload to b2
        run: b2 upload-file rdcodex orchard.db orchard-${{ env.GITHUB_REF_SLUG }}.db
        working-directory: ./orchard/scan
  prepare-and-upload:
    needs: search-and-index
    runs-on: ubuntu-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      - name: install pypy
        id: setup-pypy
        uses: actions/setup-python@v2
        with:
          python-version: 'pypy-3.7'
    
      - name: install poetry
        uses: snok/install-poetry@v1

      - name: load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ steps.setup-pypy.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: install deps if cache miss
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      
      - name: download DB from previous job
        run: curl https://codex.rhythm.cafe/orchard-${{ env.GITHUB_REF_SLUG }}.db -o orchard.db
        working-directory: ./orchard/package
        
      - name: download status DB from bot
        run: curl https://botprod.auburn.dev/status.db -o status.db
        working-directory: ./orchard/package

      - name: print out hashes of the aforementioned dbs
        run: sha1sum *.db
        working-directory: ./orchard/package  
        
      - name: package...
        run: poetry run python package.py orchard.db status.db
        working-directory: ./orchard/package
        
      - name: print out hashes of the resulting jsonl file
        run: sha1sum orchard.jsonl
        working-directory: ./orchard/package
        
      - name: install flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: fly me to the moon
        run: flyctl deploy --remote-only
        working-directory: ./orchard/package
